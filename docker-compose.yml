version: '3.3'

networks:
  outside:
    external:
      name: shimmer

services:
  goshimmer:
    image: iotaledger/goshimmer:latest
    container_name: goshimmer
    hostname: goshimmer
    stop_grace_period: 2m
    # Mount volumes:
    # make sure to give read/write access to the folder ./mainnetdb (e.g., chmod -R 777 ./mainnetdb)
    # optionally, you can mount a config.json into the container
    volumes:
      - "~/stack-data/goshimmer/db:/tmp/mainnetdb:rw"
      - "~/stack-data/goshimmer/peerdb:/tmp/peerdb:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - ./goshimmer/config.json:/config.json:ro
    ports:
      # AutoPeering
      - "0.0.0.0:14626:14626/udp"
      # Gossip
      - "0.0.0.0:14666:14666/tcp"
      # FPC
      - "0.0.0.0:10895:10895/tcp"
      # HTTP API
      - "0.0.0.0:8080:8080/tcp"
      # Dashboard
      - "0.0.0.0:8081:8081/tcp"
      # pprof profiling
      - "0.0.0.0:6061:6061/tcp"
      # txstream
      - "0.0.0.0:5000:5000/tcp"
    networks:
      - outside

  wasp:
    container_name: wasp
    image: zignartech/wasp:develop
    ports:
      # dashboard
      - "0.0.0.0:7000:7000/tcp"
      # webapi
      - "0.0.0.0:9090:9090/tcp"
      # HTTP API
      - "0.0.0.0:5550:5550/tcp"
      # peering
      - "0.0.0.0:4000:4000/tcp"
    volumes:
      - "./wasp/config.json:/run/config.json"
    depends_on:
      - goshimmer
    networks:
      - outside

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090/tcp"
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - ./tools/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - ./prometheus/data:/prometheus:rw
  #   depends_on:
  #     - goshimmer
  #   networks:
  #     - outside

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: unless-stopped
  #   environment:
  #     # path to provisioning definitions can only be defined as
  #     # environment variables for grafana within docker
  #     - GF_PATHS_PROVISIONING=/var/lib/grafana/provisioning
  #   ports:
  #     - "3000:3000/tcp"
  #   user: "472"
  #   volumes:
  #     - ./tools/monitoring/grafana:/var/lib/grafana:rw
  #   networks:
  #     - outside